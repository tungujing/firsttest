<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    <property name="hashAlgorithmName" value="MD5"/>
    <property name="hashIterations" value="1024"/>
    </bean>
    <bean id="userRealm" class="com.gxa.realm.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <!--每次刷新都会调用查询，这样是不对的，可以开启缓存，解决一直访问服务器的问题-->
        <property name="cacheManager" ref="cacheManager"/>
    </bean>
    <!--配置了生命周期的后置处理器，作用是调用IOC容器中的shiro bean的生命周期方法-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/log"></property>
        <property name="filterChainDefinitions">
            <value>
                /log=anon
                /asserts/**=anon
                /login=anon
                <!--使用shiro实现用户退出-->
                /logout=logout
                /docs=anon
                /swagger-ui.html=anon
                /webjars/springfox-swagger-ui/**=anon
                /swagger-resources/**=anon
                /v2/api-docs=anon
                <!--authc需要认证才可访问。-->
                /**=authc
            </value>
        </property>
    </bean>
</beans>